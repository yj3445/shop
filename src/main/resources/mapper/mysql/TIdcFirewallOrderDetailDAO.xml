<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itshop.web.dao.mysql.TIdcFirewallOrderDetailDAO">
  <resultMap id="BaseResultMap" type="com.itshop.web.dao.po.TIdcFirewallOrderDetail">
    <id column="order_detail_id" jdbcType="INTEGER" property="orderDetailId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="in_or_out" jdbcType="INTEGER" property="inOrOut" />
    <result column="protocol" jdbcType="VARCHAR" property="protocol" />
  </resultMap>
  <sql id="Base_Column_List">
    order_detail_id, order_id, port,in_or_out,protocol
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_idc_firewall_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_idc_firewall_order_detail
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByOrderId" parameterType="java.lang.Integer">
    delete from t_idc_firewall_order_detail
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="order_detail_id" parameterType="com.itshop.web.dao.po.TIdcFirewallOrderDetail">
    insert into t_idc_firewall_order_detail (order_detail_id, order_id, port
      ,in_or_out,protocol
      )
    values (#{orderDetailId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{port,jdbcType=INTEGER}
      ,#{inOrOut,jdbcType=INTEGER},#{protocol,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="order_detail_id" parameterType="com.itshop.web.dao.po.TIdcFirewallOrderDetail">
    insert into t_idc_firewall_order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        order_detail_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="inOrOut != null">
        in_or_out,
      </if>
      <if test="protocol != null">
        protocol,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        #{orderDetailId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="inOrOut != null">
        #{inOrOut,jdbcType=INTEGER},
      </if>
      <if test="protocol != null">
        #{protocol,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.itshop.web.dao.po.TIdcFirewallOrderDetail">
    update t_idc_firewall_order_detail
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="inOrOut != null">
        in_or_out = #{inOrOut,jdbcType=INTEGER},
      </if>
      <if test="protocol != null">
        protocol = #{protocol,jdbcType=VARCHAR},
      </if>
    </set>
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itshop.web.dao.po.TIdcFirewallOrderDetail">
    update t_idc_firewall_order_detail
    set order_id = #{orderId,jdbcType=INTEGER},
      port = #{port,jdbcType=INTEGER},
        in_or_out = #{inOrOut,jdbcType=INTEGER},
        protocol = #{protocol,jdbcType=VARCHAR}
    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="orderDetailId"
          parameterType="java.util.List" >
    insert into t_idc_firewall_order_detail ( order_id, port,in_or_out,protocol)
    values
    <foreach collection ="list" item="data" index= "index" separator =",">
      (
      #{data.orderId,jdbcType=INTEGER}, #{data.port,jdbcType=INTEGER},
      #{data.inOrOut,jdbcType=INTEGER},  #{data.protocol,jdbcType=VARCHAR}
      )
    </foreach >
  </insert>

  <select id="selectByOrderId" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_idc_firewall_order_detail
    where 1=1
    <if test="list !=null and list.size() > 0">
      and order_id in
      <foreach collection="list" item="name" index="index" open="(" close=")" separator=",">
        #{name}
      </foreach>
    </if>
  </select>
</mapper>